0.0 apr 2016
- initial, limited version
- open source license JPL

1.0 dec 2016

2.0 may 2017

2.1 jul 2017

2.2 july 2017
- bug fix: used realloc after sbrk for multiple
  preprocessing directives were used, causing crash

2.3 aug 2017
- no default setting of nr of cores
- using a preprocessing directive enables cpp

2.4 oct 2017
- added -pat and -pattern for matching simpler regex patterns
- added -expr and -regex as synonyms of -e
- added inline pat command
- added visual display of source on d commands
- made -pat/-expr pipelines work
+ disabled call to fct_defs in 'list' commands
  if the nr of tokens is greater than 500,000 (linux 10/26)

2.5 aug 2018
- bug fixes (e.g., tests for . == 0 or . != 0 came out wrong)
- allowing use of globals inside functions
- added a few cwe checkers

2.6 oct 2018
- rules/cwe library added for ten top cwe vulnerabilities
  (not yet in the distributed version)
- added window and nowindow command, new default is nowindow
  (for popping up a tcl/tk window on display commands)
- fixed: bug in command language interpreter (condition evals)

2.7 nov 2018
- fixed: bug that global arrays werent visible inside functions
- fixed: strings or quoted character now terminated at unescaped newlines
- fixed: {} imbalance on files that arent preprocessed with cpp
- added: -eol option
- added: some additional fct calls to c_api.h and c.ar (eg timing)

2.8 feb 2019
- added 'and' qualifier to contains command (and updated manpage)
- reduced cache misses in multi-core mode significantly

2.9 mar 2019
- fixed missing lock in code for "match()" in cobra_prog.y which could
  cause occassional segfaults when executing scripts in multicore mode

3.0 jun 2019
- extensions to the pattern language, allowing embedded regular
  expressions in pattern expressions
- new predefined functions that can be used in cobra scripts:
  reset(), fcts(), save(), restore(), marks()
- updated online manpages
- new library query files
- extension of command query save, to allow |,&, and ^ modifiers
- bug fixes and speedups for multi-core processing
- full source code and libraries released on github
- after initial release on github, made following updates:
  - fixed a line number bug where // style comments had a linenr
    attribute one too high
  - added C_TMP environment variable, explained in the main README.md
    relevant only to older cygwin/pc platforms where 'dot' otherwise
    can't find /tmp
  - corrected "malloc.h" -> "stdlib.h" for compilation on macs
  - made query commands 'context' and 'fcg' work correctly again
  - fixed bug with using cpp on/off interactively
  - created tagged commit for the final 3.0 version dated June 12 2019
    tag: version-3.0

3.1 nov 2019
  - correctly interpret a 'q' command when a script is read from a file
  - updated rules/play/taint.cobra
  - added checks to prevent null-ptr derefs
  - fixed reference to an out-of-scope variable, detected by coverity scan
  - fewer warnings about redefined labels when rerunning scripts
  - fixed bug with pattern searches that limited alternative choices of
    how bindings were applied
  - rewrote the encoding of associative arrays for the scripting language
    to make it considerably faster when dealing with larger arrays
  - added a -text option to suppress the categorization of tokens, which
    is especially useful when using cobra as a runtime verification tool
    on data other than program source text
  - revised how cobra reads data from stdin in no files are given. the
    data is now read in portions, so that cobra can maintain a sliding
    window on an event-stream, and check scripted queries, or pattern
    queries on a potentially infinite data stream (provided the memory
    requirements for the check remains bounded).
    by splitting the data-stream it is also possible to then check
    multiple properties in parallel.
  - many other small improvements and fixes in the query libraries, the
    main source code in src, and in the standalone checkers in src_app,
    especially in the standalone version of the cwe checkers, which are
    now all recoded to support multi-core checks
  - added online tutorials for the all existing capabilities of cobra
    verison 3.1, including the new runtime verification options.

3.2/3.3 sep 2020
  - added new find_taint backend module for finding cases of potential
    code injection in code bases.
  - reduced memory use and inproved runtime performance in processing
    streaming data, with revised token recycling.
  - added runtime and command-line options for defining the size of the
    moving event window (-stream) in applications of runtime verification.
  - added support for multi-script streaming in runtime verification.
    (earlier only a single script could be used)
  - added predefined functions for handling lists, queues, stack within Cobra scripts
  - improved accuracy of bracket-pairing across ifdef directives in C/C++ code,
    using a stack-based method for remembering settings across these directives.
  - better method for passing command-line arguments to backend modules,
    recognizing options preceded by a double dash, which are now passed to
    backend modules uninterpreted.
  - added support for the use of binary exclusive or (^), binary right-shift (>>),
    and binary left-shift (<<) operators in Cobra scripts.
  - added support for modifying additional token fields in Cobra scripts:
    specifically the fields: .round, .bracket, .curly, and .len, in addition
    to the already allowed fields .mark, .fnm, and .lnr.
  - increased the sizes of some arrays to prevent static analyzer warnings on
    potential buffer overflow.
  - added a compiler directive NO_SBRK option to support newer Mac & Linux platforms
    (preventing direct calls to the sbrk() system-routine).
  - added compiler directive DEBUG_MEM for generating diagnostic output on memory
    use during script executions.
  - additional small bug fixes.

3.4 feb 2021
  - further improvements in accuracy of brace pairing in pattern expressions (-pe)
  - new command-line options -F, -recursive, -eol, -eof
  - all warning and error messages now go to stderr instead of stdout
  - added -json and -json+ command line options primarily for output of -pe searches
  - new interactive query command dp to display selected pattern matches
  - updated manual pages
  - small bug fixes

3.4 march 5 2021
  - fixed bug in display of search results for option pe
  - fixed bug in fcts command when -m flag is used (parse macros)
  - added support of comparisons with .fct in expressions;
  - added the ability to define additional constraints, as general expressions
    on token attributes attached to states) in pattern-expression matching expressions
    (option pe) - to be documented

3.4 march 19 2021
  - changed working of command-line argument -comments to enable the inclusion
    of comments as tokens.  the full comment text is always included in the token
    (each comment forms a single token).  by default now comments are not included
    in the token stream. clearly, enabling preprocessing (-cpp) will void this option
    because the preprocessor will remove comments.
  - several other improvements and fixes in pattern expression matching
  - updated manual pages and tutoral pages with the changes

3.5 june 25 2021
  - bug fixes in pattern matching code (option -pe), especially
    when using choices in pattern expressions
  - bug fix in the input streaming mode
  - corrected implementation of the ft command (find-type)
  - new command: 'symbols' that tries to quickly link variables
    to the most likely location of their declaration
    with manpage (http://spinroot.com/cobra/commands/symbols.html)
  - modified working of reset command, to preserve link
    information set in the new symbols command
  - added token category @const as a shorthand for:
    @const_int, @const_hex, @const_oct, const_flt
    which are still supported
  - small fix in the find_taint command (better precision
    in reporting suspicious uses of gets())
  - extension of pattern expressions to allow positional
    parameters and the application of general constraints
    at different points in an expression

-- august 6 2021
  - new version of src_app/find_taint that now reads a
    user-definable configuration file -- added a manual
    page for this new backend tool as well.
    the new version is faster (though that wasn't the
    objective) and reports more things; it also has more
    easily understandable code (the main objective)

3.6 september 10 2021
  - added pattern sets: with the -pe (or -pat) command
    you can now specify a named set to save the matching
    patterns in.  you can display individual matches by
    using the set name in the 'dp' command, and you can
    perform set operations, or create, delte, or convert
    a pattern set into basic markings with the new 'ps'
    (short for 'pattern set') command.
    added manual pages and explanations for the changes.
